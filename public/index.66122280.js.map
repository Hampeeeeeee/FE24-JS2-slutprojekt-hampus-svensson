{"mappings":"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","sources":["<anon>","src/main.ts","src/modules/member.ts","src/modules/render.ts","src/modules/URL.ts","src/modules/assignment.ts","src/modules/sorting.ts","src/modules/filter.ts"],"sourcesContent":["// Mycket av det som syns på hemsidan finns här, forms, sortering, populera medlemmar till filterna.\n// Funktioner som hanterar allt som har med members att göra. Lägga till member, hämta members, visa modal med\n// members som kan bli tilldelade uppgifter, och slutligen lägga till member till en uppgift.\n// Funktioner som renderar uppgifterna från getAllTasks(). Uppdaterar status på firebase \n// beroende på vilken knapp som klickas.\n// Hämtar firebase url'n med all backend information.\nconst $118f373941892fbc$export$362abebb4b313340 = \"https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments\";\nasync function $118f373941892fbc$export$d1f442602a91e7cc() {\n    const url = `${$118f373941892fbc$export$362abebb4b313340}.json`; // Lägg till \".json\" för att hämta data från Firebase\n    try {\n        const res = await fetch(url); // Gör ett GET-anrop till Firebase\n        if (!res.ok) throw new Error('Something went wrong fetching data');\n        const taskObj = await res.json(); // Konvertera svaret till JSON\n        // gör om objektet till en array.\n        const taskArray = Object.entries(taskObj).map(([id, obj])=>({\n                id: id,\n                ...obj\n            }));\n        console.log(taskArray);\n        return taskArray; // Returnera de hämtade uppgifterna\n    } catch (error) {\n        console.error('Error when fetching assignments:', error);\n        return [];\n    }\n}\n\n\n\nlet $1a5d3e8665c01fa1$export$7191f9b9098a3ea4;\nasync function $1a5d3e8665c01fa1$export$70637127e9a65bc1(tasks) {\n    try {\n        if (!tasks) tasks = await (0, $118f373941892fbc$export$d1f442602a91e7cc)();\n        const todoContainer = document.getElementById('todoContainer');\n        const inProgressContainer = document.getElementById('inProgressContainer');\n        const doneContainer = document.getElementById('doneContainer');\n        todoContainer.innerHTML = '';\n        inProgressContainer.innerHTML = '';\n        doneContainer.innerHTML = '';\n        if (todoContainer) // Loopa igenom alla tasks och skapa HTML för varje\n        tasks.forEach((task)=>{\n            if (task.status === 'new') {\n                // Skapa en div för varje uppgift\n                const taskElement = document.createElement('div');\n                taskElement.classList.add('assignment');\n                taskElement.setAttribute('data-timestamp', task.timestamp.toString());\n                const timestamp = task.timestamp;\n                const date = new Date(timestamp);\n                const formattedDate = date.toLocaleString('sv-SE');\n                taskElement.innerHTML = `\n                        <h2>To do</h2>\n                        <h3>${task.title}</h3>\n                        <p><i>${task.description}</i></p>\n                        <h4><b>Qualification: ${task.category}</b></h4>\n                        <h5>${formattedDate}</h5>\n                        <button id=\"assignToBtn\">Assign to</button>\n                    `;\n                todoContainer.appendChild(taskElement);\n                const assignToBtn = taskElement.querySelector('#assignToBtn');\n                if (assignToBtn) assignToBtn.addEventListener('click', async ()=>{\n                    (0, $d956a92e5e7c93a9$export$38e490d5a4814c5)(task.category, task.category, assignToBtn, task.id);\n                });\n            } else if (task.status === 'in progress') {\n                // Skapa en div för varje uppgift\n                const taskElement = document.createElement('div');\n                taskElement.classList.add('assignment');\n                taskElement.setAttribute('data-timestamp', task.timestamp.toString());\n                const timestamp = task.timestamp;\n                const date = new Date(timestamp);\n                const formattedDate = date.toLocaleString('sv-SE');\n                taskElement.innerHTML = `\n                        <h2>In progress</h2>\n                        <h3>${task.title}</h3>\n                        <p><i>${task.description}</i></p>\n                        <h4><b>Qualification: ${task.category}</b></h4>\n                        <h5>${formattedDate}</h5>\n                        <p>Assigned to: ${task.assigned}</p>\n                        <button id=\"doneBtn\">Done</button>\n                    `;\n                inProgressContainer.appendChild(taskElement);\n                const doneBtn = taskElement.querySelector('#doneBtn');\n                if (doneBtn) doneBtn.addEventListener('click', async ()=>{\n                    const url = `https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments/${task.id}.json`;\n                    const doneTask = {\n                        status: 'done'\n                    };\n                    const options = {\n                        method: \"PATCH\",\n                        body: JSON.stringify(doneTask),\n                        headers: {\n                            \"Content-Type\": \"application/json; charset=UTF-8\"\n                        }\n                    };\n                    try {\n                        const response = await fetch(url, options);\n                        if (response.ok) {\n                            console.log(\"Task status updated to done\");\n                            $1a5d3e8665c01fa1$export$70637127e9a65bc1();\n                        } else console.error('Failed to update task status');\n                    } catch (error) {\n                        console.error('Error while updating task status:', error);\n                    }\n                });\n            } else if (task.status === 'done') {\n                // Skapa en div för varje uppgift\n                const taskElement = document.createElement('div');\n                taskElement.classList.add('assignment');\n                taskElement.setAttribute('data-timestamp', task.timestamp.toString());\n                const timestamp = task.timestamp;\n                const date = new Date(timestamp);\n                const formattedDate = date.toLocaleString('sv-SE');\n                taskElement.innerHTML = `\n                        <h2>Done</h2>\n                        <h3>${task.title}</h3>\n                        <p><i>${task.description}</i></p>\n                        <h4><b>Qualification: ${task.category}</b></h4>\n                        <h5>${formattedDate}</h5>\n                        <p>Assigned to: ${task.assigned}</p>\n                        <button id=\"deleteBtn\">Delete</button>\n                    `;\n                doneContainer.appendChild(taskElement);\n                const deleteBtn = taskElement.querySelector('#deleteBtn');\n                if (deleteBtn) deleteBtn.addEventListener('click', async ()=>{\n                    const url = `https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments/${task.id}.json`;\n                    const deletedTask = {\n                        status: 'deleted'\n                    };\n                    const options = {\n                        method: \"DELETE\",\n                        body: JSON.stringify(deletedTask),\n                        headers: {\n                            \"Content-Type\": \"application/json; charset=UTF-8\"\n                        }\n                    };\n                    try {\n                        const response = await fetch(url, options);\n                        if (response.ok) console.log(\"Task status updated to deleted\");\n                        else console.error('Failed to update task status');\n                    } catch (error) {\n                        console.error('Error while updating task status:', error);\n                    }\n                });\n            }\n        });\n    } catch (error) {\n        console.error('Error displaying assignments:', error);\n    }\n}\n\n\nconst $d956a92e5e7c93a9$var$base_url = \"https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/\";\nasync function $d956a92e5e7c93a9$export$d199869810608d4e(event) {\n    event.preventDefault();\n    const name = document.querySelector('#memberName').value.trim();\n    const rolesSelect = document.querySelector('#memberRole');\n    const selectedRole = rolesSelect.value; // \"value\" ger oss valda rollen som en sträng\n    if (!name || !selectedRole) {\n        alert(\"V\\xe4nligen fyll i ett namn och v\\xe4lj en roll.\");\n        return;\n    }\n    const memberData = {\n        name: name,\n        role: selectedRole // Här lagras den valda rollen som en sträng\n    };\n    const url = $d956a92e5e7c93a9$var$base_url + '/members.json';\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(memberData),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    try {\n        const res = await fetch(url, options);\n        if (!res.ok) throw new Error(\"N\\xe5got gick fel n\\xe4r medlemmen skulle l\\xe4ggas till.\");\n        const data = await res.json();\n        console.log(\"Medlem tillagd:\", data);\n        const memberDiv = document.createElement(\"div\");\n        memberDiv.classList.add(\"team-member\");\n        memberDiv.textContent = `${name} - ${selectedRole}`;\n        document.querySelector('#teamList')?.appendChild(memberDiv);\n        document.querySelector('#memberName').value = \"\";\n        rolesSelect.selectedIndex = -1;\n    } catch (error) {\n        console.error(\"Fel:\", error);\n        alert(\"Medlemmen kunde inte l\\xe4ggas till, f\\xf6rs\\xf6k igen!\");\n    }\n}\nasync function $d956a92e5e7c93a9$export$f4931e6f9feb30c5() {\n    const url = 'https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/members.json';\n    try {\n        const response = await fetch(url); // Hämta data från Firebase\n        if (!response.ok) throw new Error('Failed to fetch members');\n        const membersData = await response.json(); // Konvertera svaret till JSON\n        const members = Object.values(membersData); // Omvandla objektet till en array\n        return members;\n    } catch (error) {\n        console.error('Error fetching members:', error);\n        return [];\n    }\n}\nfunction $d956a92e5e7c93a9$export$e19948d0d27f8138(matchingMembers, taskCategory, button, taskId) {\n    if (button.textContent === \"Done\") return; // Stoppar funktionen om knappen redan är \"Done\"\n    // Skapa modalens HTML\n    const modal = document.createElement('div');\n    modal.classList.add('modal');\n    modal.innerHTML = `\n        <div class=\"modal-content\">\n            <h3>Assign task for category: ${taskCategory}</h3>\n            <ul>\n                ${matchingMembers.map((member)=>`\n                    <li>\n                        <button class=\"assign-btn\">${member.name} (${member.role})</button>\n                    </li>\n                `).join('')}\n            </ul>\n            <button class=\"close-modal\">Close</button>\n        </div>\n    `;\n    // Lägg till modal till body\n    document.body.appendChild(modal);\n    const buttonRect = button.getBoundingClientRect(); // Hämta knappens position\n    modal.style.position = 'absolute';\n    modal.style.left = `${buttonRect.right + window.scrollX}px`; // Placera modalen till höger om knappen\n    modal.style.top = `${buttonRect.top + window.scrollY}px`;\n    const assignButtons = modal.querySelectorAll('.assign-btn');\n    assignButtons.forEach((assignButton, index)=>{\n        assignButton.addEventListener('click', async ()=>{\n            const selectedMember = matchingMembers[index];\n            const url = `https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments/${taskId}.json`;\n            const inProgressTask = {\n                status: 'in progress',\n                assigned: selectedMember.name\n            };\n            const options = {\n                method: \"PATCH\",\n                body: JSON.stringify(inProgressTask),\n                headers: {\n                    \"Content-Type\": \"application/json; charset=UTF-8\"\n                }\n            };\n            try {\n                const response = await fetch(url, options);\n                if (response.ok) {\n                    console.log(\"Task status updated to in progress\");\n                    (0, $1a5d3e8665c01fa1$export$70637127e9a65bc1)();\n                } else console.error('Failed to update task status');\n            } catch (error) {\n                console.error('Error while updating task status:', error);\n            }\n            const taskElement = button.closest('.assignment');\n            if (taskElement) {\n                const inProgressContainer = document.getElementById('inProgressContainer');\n                if (inProgressContainer) {\n                    inProgressContainer.appendChild(taskElement);\n                    const assignButton = taskElement.querySelector('#assignToBtn');\n                    if (assignButton) // assignButton.textContent = 'Done';\n                    assignButton.addEventListener('click', ()=>{\n                        // Flytta uppgiften till \"Done\" om det är önskvärt\n                        const doneContainer = document.getElementById('doneContainer');\n                        if (doneContainer) doneContainer.appendChild(taskElement); // Flytta uppgiften till \"Done\"-sektionen\n                        assignButton.addEventListener('click', ()=>{\n                            // Ta bort uppgiften från doneContainer\n                            if (doneContainer) doneContainer.removeChild(taskElement);\n                            if (modal.parentElement) modal.parentElement.removeChild(modal); // Stäng modalen\n                        });\n                    });\n                }\n            }\n            if (modal.parentElement) modal.parentElement.removeChild(modal); // Stäng modalen\n        });\n        const closeModalButton = modal.querySelector('.close-modal');\n        closeModalButton?.addEventListener('click', ()=>{\n            if (modal.parentElement) modal.parentElement.removeChild(modal); // Ta bort modalen om den fortfarande finns i DOM\n        });\n    });\n}\nasync function $d956a92e5e7c93a9$export$38e490d5a4814c5(role, taskCategory, button, taskId) {\n    const members = await $d956a92e5e7c93a9$export$f4931e6f9feb30c5(); // Hämta medlemmarna från Firebase\n    // Hitta alla medlemmar som har samma roll\n    const matchingMembers = members.filter((m)=>m.role === role);\n    $d956a92e5e7c93a9$export$e19948d0d27f8138(matchingMembers, taskCategory, button, taskId); // Visa en modal med medlemmarna\n}\n\n\n// Allt som har med assignment och göra. Hämta assignments, läggs till assignments, och render assignments.\nconst $06810e6f039f30ec$var$base_url = \"https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/\";\nasync function $06810e6f039f30ec$export$f2fb0f65f74a9158(event) {\n    event.preventDefault();\n    const title = document.querySelector('#assignmentName').value.trim();\n    const description = document.querySelector('#assignmentDescription').value.trim();\n    const category = document.querySelector('#assignmentRole').value;\n    if (!title || !category) {\n        alert(\"Please provide both title and role.\");\n        return;\n    }\n    const newAssignment = {\n        title: title,\n        description: description,\n        category: category,\n        status: \"new\",\n        assigned: undefined,\n        timestamp: Date.now()\n    };\n    console.log(\"New Assignment to add:\", newAssignment); // Debugga om rätt data skickas\n    const url = $06810e6f039f30ec$var$base_url + 'assignments.json';\n    const options = {\n        method: \"POST\",\n        body: JSON.stringify(newAssignment),\n        headers: {\n            \"Content-Type\": \"application/json; charset=UTF-8\"\n        }\n    };\n    try {\n        const res = await fetch(url, options);\n        if (!res.ok) throw new Error(\"Something went wrong when adding an assignment.\");\n        const data = await res.json();\n        console.log(\"Assignment added:\", data);\n        // Återställ formuläret efter att uppgiften är skapad\n        document.querySelector(\"#assignmentName\").value = \"\";\n        document.querySelector(\"#assignmentDescription\").value = \"\";\n        document.querySelector(\"#assignmentRole\").selectedIndex = 0;\n    } catch (error) {\n        console.error(\"Error:\", error);\n        alert(\"Could not add assignment, try again!\");\n    }\n}\n\n\n// Funktioner som sorterar inProgressContainer på timestamp och bokstavsordning på titeln.\n// Funktion som sorterar DOM-element baserat på Timestamp\nfunction $e362b93da7c8a1b3$export$862675728dfd44e(order) {\n    const container = document.querySelector('#inProgressContainer');\n    if (!container) return;\n    // Hämta alla uppgiftselement i containern\n    const assignmentElements = Array.from(container.querySelectorAll('.assignment'));\n    // Debugga och logga timestamps\n    assignmentElements.forEach((el)=>{\n        const timestamp = parseInt(el.getAttribute('data-timestamp') || '0');\n        console.log(`Element ID: ${el.id}, Timestamp: ${timestamp}`);\n    });\n    // Sortera elementen baserat på timestamp\n    const sortedElements = assignmentElements.sort((a, b)=>{\n        const timestampA = parseInt(a.getAttribute('data-timestamp') || '0');\n        const timestampB = parseInt(b.getAttribute('data-timestamp') || '0');\n        console.log(`Comparing ${timestampA} with ${timestampB}`);\n        return order === 'newestToOldest' ? timestampB - timestampA : timestampA - timestampB;\n    });\n    // Omordna elementen i containern utan att skapa nya\n    sortedElements.forEach((el)=>container.appendChild(el)); // Flytta varje element till rätt plats\n}\n// Funktion som sorterar DOM-element baserat på titel (A-Z eller Z-A)\nfunction $e362b93da7c8a1b3$export$332a3c402681f82d(order) {\n    const container = document.querySelector('#inProgressContainer');\n    if (!container) return;\n    // Hämta alla uppgiftselement i containern\n    const assignmentElements = Array.from(container.querySelectorAll('.assignment'));\n    // Sortera elementen baserat på titeln\n    const sortedElements = assignmentElements.sort((a, b)=>{\n        const titleA = a.querySelector('h3')?.textContent?.toLowerCase() || '';\n        const titleB = b.querySelector('h3')?.textContent?.toLowerCase() || '';\n        if (order === 'titleAsc') return titleA.localeCompare(titleB);\n        else return titleB.localeCompare(titleA);\n    });\n    // Omordna elementen i containern utan att skapa nya\n    sortedElements.forEach((el)=>container.appendChild(el)); // Detta flyttar elementet till rätt plats\n}\n\n\n// Filtrerar members och kategori.\nconst $d1cdcf3828e16a44$export$45830ad1d19224ad = (tasks, member)=>{\n    return tasks.filter((task)=>task.assigned === member);\n};\nconst $d1cdcf3828e16a44$export$6d1731a321e8bdf4 = (tasks, category)=>{\n    return tasks.filter((task)=>task.category === category);\n};\n\n\n\n\nlet $ad2bcec7a0192558$var$tasks;\n(0, $118f373941892fbc$export$d1f442602a91e7cc)().then((t)=>$ad2bcec7a0192558$var$tasks = t);\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const memberform = document.querySelector('#addMemberForm');\n    if (memberform) memberform.addEventListener('submit', (0, $d956a92e5e7c93a9$export$d199869810608d4e));\n});\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const assignmentform = document.querySelector('#addAssignmentForm');\n    if (assignmentform) assignmentform.addEventListener('submit', (0, $06810e6f039f30ec$export$f2fb0f65f74a9158));\n});\ndocument.querySelector('#timestampSorting')?.addEventListener('change', (event)=>{\n    const selectedValue = event.target.value;\n    if (selectedValue === 'asc') (0, $e362b93da7c8a1b3$export$862675728dfd44e)('oldestToNewest');\n    else if (selectedValue === 'desc') (0, $e362b93da7c8a1b3$export$862675728dfd44e)('newestToOldest');\n});\ndocument.querySelector('#titleSorting')?.addEventListener('change', (event)=>{\n    const selectedValue = event.target.value;\n    if (selectedValue === 'titleAsc') (0, $e362b93da7c8a1b3$export$332a3c402681f82d)('titleAsc');\n    else if (selectedValue === 'titleDesc') (0, $e362b93da7c8a1b3$export$332a3c402681f82d)('titleDesc');\n});\n// Populera medlemsdropdownen\nasync function $ad2bcec7a0192558$var$populateMemberFilter() {\n    const memberFilter = document.querySelector('#memberFilter');\n    try {\n        const members = await (0, $d956a92e5e7c93a9$export$f4931e6f9feb30c5)();\n        members.forEach((member)=>{\n            const option = document.createElement('option');\n            option.value = member.name;\n            option.textContent = member.name;\n            memberFilter.appendChild(option);\n        });\n    } catch (error) {\n        console.error('Error populating member filter:', error);\n    }\n}\ndocument.addEventListener('DOMContentLoaded', $ad2bcec7a0192558$var$populateMemberFilter);\n(0, $1a5d3e8665c01fa1$export$70637127e9a65bc1)();\nconst $ad2bcec7a0192558$var$memberFilter = document.querySelector('#memberFilter');\nconsole.log($ad2bcec7a0192558$var$memberFilter);\n$ad2bcec7a0192558$var$memberFilter?.addEventListener('change', ()=>{\n    console.log($ad2bcec7a0192558$var$memberFilter.value);\n    const filteredTasks = (0, $d1cdcf3828e16a44$export$45830ad1d19224ad)($ad2bcec7a0192558$var$tasks, $ad2bcec7a0192558$var$memberFilter.value);\n    (0, $1a5d3e8665c01fa1$export$70637127e9a65bc1)(filteredTasks);\n    console.log(filteredTasks);\n});\nconst $ad2bcec7a0192558$var$categoryFilter = document.querySelector('#categoryFilter');\nconsole.log($ad2bcec7a0192558$var$categoryFilter);\n$ad2bcec7a0192558$var$categoryFilter?.addEventListener('change', ()=>{\n    console.log($ad2bcec7a0192558$var$categoryFilter.value);\n    const filteredTasks = (0, $d1cdcf3828e16a44$export$6d1731a321e8bdf4)($ad2bcec7a0192558$var$tasks, $ad2bcec7a0192558$var$categoryFilter.value);\n    (0, $1a5d3e8665c01fa1$export$70637127e9a65bc1)(filteredTasks);\n    console.log(filteredTasks);\n});\n\n\n//# sourceMappingURL=index.66122280.js.map\n","// Mycket av det som syns på hemsidan finns här, forms, sortering, populera medlemmar till filterna.\r\n\r\nimport { addMember } from \"./modules/member.ts\";\r\nimport { addAssignment, Assignment } from \"./modules/assignment.ts\";\r\nimport { getMembers } from \"./modules/member.ts\";\r\nimport { sortByTimestamp, sortByTitle } from \"./modules/sorting.ts\";\r\nimport { filterByMember, filterByCategory } from \"./modules/filter.ts\";\r\nimport { renderAllTasks } from \"./modules/render.ts\";\r\nimport { getAllTasks } from \"./modules/URL.ts\";\r\n\r\nlet tasks;\r\ngetAllTasks().then(t => tasks = t);\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\r\n    const memberform = document.querySelector('#addMemberForm') as HTMLFormElement;\r\n\r\n    if (memberform) {\r\n        memberform.addEventListener('submit', addMember);\r\n    }\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const assignmentform = document.querySelector('#addAssignmentForm') as HTMLFormElement;\r\n\r\n    if (assignmentform) {\r\n        assignmentform.addEventListener('submit', addAssignment);\r\n    }\r\n});\r\n\r\ndocument.querySelector('#timestampSorting')?.addEventListener('change', (event) => {\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    if (selectedValue === 'asc') {\r\n        sortByTimestamp('oldestToNewest');\r\n    } else if (selectedValue === 'desc') {\r\n        sortByTimestamp('newestToOldest');\r\n    }\r\n});\r\n\r\ndocument.querySelector('#titleSorting')?.addEventListener('change', (event) => {\r\n    const selectedValue = (event.target as HTMLSelectElement).value;\r\n    if (selectedValue === 'titleAsc') {\r\n        sortByTitle('titleAsc');\r\n    } else if (selectedValue === 'titleDesc') {\r\n        sortByTitle('titleDesc');\r\n    }\r\n})\r\n\r\n// Populera medlemsdropdownen\r\nasync function populateMemberFilter() {\r\n    const memberFilter = document.querySelector('#memberFilter') as HTMLSelectElement;\r\n\r\n    try {\r\n        const members = await getMembers();\r\n\r\n        members.forEach((member) => {\r\n            const option = document.createElement('option');\r\n            option.value = member.name;\r\n            option.textContent = member.name;\r\n            memberFilter.appendChild(option);\r\n        });\r\n    } catch (error) {\r\n        console.error('Error populating member filter:', error);\r\n    }\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', populateMemberFilter);\r\n\r\nrenderAllTasks();\r\n\r\nconst memberFilter = document.querySelector('#memberFilter')  as HTMLSelectElement;\r\nconsole.log(memberFilter);\r\nmemberFilter?.addEventListener('change', () =>{\r\n    console.log(memberFilter.value);\r\n\r\n    const filteredTasks = filterByMember(tasks, memberFilter.value)\r\n    renderAllTasks(filteredTasks)\r\n    console.log(filteredTasks);\r\n})\r\n\r\nconst categoryFilter = document.querySelector('#categoryFilter') as HTMLSelectElement;\r\nconsole.log(categoryFilter);\r\ncategoryFilter?.addEventListener('change', () =>{\r\n    console.log(categoryFilter.value);\r\n\r\n    const filteredTasks = filterByCategory(tasks, categoryFilter.value)\r\n    renderAllTasks(filteredTasks);\r\n    console.log(filteredTasks)\r\n})\r\n\r\n\r\n\r\n\r\n\r\n","// Funktioner som hanterar allt som har med members att göra. Lägga till member, hämta members, visa modal med\r\n// members som kan bli tilldelade uppgifter, och slutligen lägga till member till en uppgift.\r\n\r\nimport { renderAllTasks } from \"./render.ts\";\r\n\r\nconst base_url: string = \"https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/\";\r\n\r\ninterface Member {\r\n    name: string;\r\n    role: string;\r\n}\r\n\r\n\r\nexport async function addMember(event: Event): Promise<void> {\r\n    event.preventDefault();\r\n\r\n    const name: string = (document.querySelector('#memberName') as HTMLInputElement).value.trim();\r\n    const rolesSelect: HTMLSelectElement = document.querySelector('#memberRole') as HTMLSelectElement;\r\n\r\n    const selectedRole = rolesSelect.value;  // \"value\" ger oss valda rollen som en sträng\r\n\r\n    if (!name || !selectedRole) {\r\n        alert(\"Vänligen fyll i ett namn och välj en roll.\");\r\n        return;\r\n    }\r\n\r\n    const memberData = {\r\n        name: name,\r\n        role: selectedRole  // Här lagras den valda rollen som en sträng\r\n    };\r\n\r\n    const url = base_url + '/members.json';\r\n    const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(memberData),\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await fetch(url, options);\r\n        if (!res.ok) throw new Error(\"Något gick fel när medlemmen skulle läggas till.\");\r\n\r\n        const data = await res.json();\r\n        console.log(\"Medlem tillagd:\", data);\r\n\r\n        const memberDiv = document.createElement(\"div\");\r\n        memberDiv.classList.add(\"team-member\");\r\n        memberDiv.textContent = `${name} - ${selectedRole}`;\r\n        document.querySelector('#teamList')?.appendChild(memberDiv);\r\n\r\n        (document.querySelector('#memberName') as HTMLInputElement).value = \"\";\r\n        rolesSelect.selectedIndex = -1;\r\n\r\n    } catch (error) {\r\n        console.error(\"Fel:\", error);\r\n        alert(\"Medlemmen kunde inte läggas till, försök igen!\");\r\n    }\r\n}\r\n\r\n// Funktion för att hämta medlemmar från Firebase Realtime Database\r\nexport async function getMembers(): Promise<Member[]> {\r\n    const url = 'https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/members.json';\r\n\r\n    try {\r\n        const response = await fetch(url); // Hämta data från Firebase\r\n        if (!response.ok) {\r\n            throw new Error('Failed to fetch members');\r\n        }\r\n\r\n        const membersData: { [key: string]: Member } = await response.json(); // Konvertera svaret till JSON\r\n        const members = Object.values(membersData); // Omvandla objektet till en array\r\n        return members;\r\n    } catch (error) {\r\n        console.error('Error fetching members:', error);\r\n        return [];\r\n    }\r\n}\r\n\r\n// Funktion för att visa en modal med alla medlemmar som kan tilldelas\r\nexport function showMemberSelectionModal(matchingMembers: Member[], taskCategory: string, button: HTMLButtonElement, taskId: string) {\r\n\r\n    if (button.textContent === \"Done\") {\r\n        return; // Stoppar funktionen om knappen redan är \"Done\"\r\n    }\r\n\r\n    // Skapa modalens HTML\r\n    const modal = document.createElement('div');\r\n    modal.classList.add('modal');\r\n    modal.innerHTML = `\r\n        <div class=\"modal-content\">\r\n            <h3>Assign task for category: ${taskCategory}</h3>\r\n            <ul>\r\n                ${matchingMembers.map((member) => `\r\n                    <li>\r\n                        <button class=\"assign-btn\">${member.name} (${member.role})</button>\r\n                    </li>\r\n                `).join('')}\r\n            </ul>\r\n            <button class=\"close-modal\">Close</button>\r\n        </div>\r\n    `;\r\n\r\n    // Lägg till modal till body\r\n    document.body.appendChild(modal);\r\n\r\n    const buttonRect = button.getBoundingClientRect(); // Hämta knappens position\r\n    modal.style.position = 'absolute';\r\n    modal.style.left = `${buttonRect.right + window.scrollX}px`; // Placera modalen till höger om knappen\r\n    modal.style.top = `${buttonRect.top + window.scrollY}px`;\r\n\r\n    const assignButtons = modal.querySelectorAll('.assign-btn');\r\n    assignButtons.forEach((assignButton, index) => {\r\n        assignButton.addEventListener('click', async() => {\r\n            const selectedMember = matchingMembers[index];\r\n\r\n            const url = `https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments/${taskId}.json`;\r\n\r\n            const inProgressTask = {\r\n                status: 'in progress',\r\n                assigned: selectedMember.name,\r\n            }\r\n            const options = {\r\n                method: \"PATCH\",\r\n                body: JSON.stringify(inProgressTask),\r\n                headers: {\r\n                    \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                }\r\n            };\r\n            try {\r\n                const response = await fetch(url, options);\r\n                if (response.ok) {\r\n                    console.log(\"Task status updated to in progress\");\r\n                    renderAllTasks();\r\n                } else {\r\n                    console.error('Failed to update task status');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error while updating task status:', error);\r\n            }\r\n\r\n            const taskElement = button.closest('.assignment');\r\n            if (taskElement) {\r\n                const inProgressContainer = document.getElementById('inProgressContainer');\r\n                if (inProgressContainer) {\r\n                    inProgressContainer.appendChild(taskElement);\r\n                    \r\n                    const assignButton = taskElement.querySelector('#assignToBtn') as HTMLButtonElement;\r\n                    if (assignButton) {\r\n                        // assignButton.textContent = 'Done';\r\n\r\n                        assignButton.addEventListener('click', () => {\r\n\r\n                            // Flytta uppgiften till \"Done\" om det är önskvärt\r\n                            const doneContainer = document.getElementById('doneContainer');\r\n                            if (doneContainer) {\r\n                                doneContainer.appendChild(taskElement); // Flytta uppgiften till \"Done\"-sektionen\r\n                            }\r\n\r\n                            assignButton.addEventListener('click', () => {\r\n                                // Ta bort uppgiften från doneContainer\r\n                                if (doneContainer) {\r\n                                    doneContainer.removeChild(taskElement);\r\n                                }\r\n\r\n                                if (modal.parentElement) {\r\n                                    modal.parentElement.removeChild(modal); // Stäng modalen\r\n                                }\r\n                            });\r\n                        }\r\n                        )\r\n                    };\r\n                }\r\n            }\r\n            if (modal.parentElement) {\r\n                modal.parentElement.removeChild(modal); // Stäng modalen\r\n            }\r\n        });\r\n\r\n        const closeModalButton = modal.querySelector('.close-modal');\r\n        closeModalButton?.addEventListener('click', () => {\r\n            if (modal.parentElement) {\r\n                modal.parentElement.removeChild(modal); // Ta bort modalen om den fortfarande finns i DOM\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport async function assignTaskToMember(role: string, taskCategory: string, button: HTMLButtonElement, taskId: string) {\r\n    const members = await getMembers(); // Hämta medlemmarna från Firebase\r\n\r\n    // Hitta alla medlemmar som har samma roll\r\n    const matchingMembers = members.filter(m => m.role === role);\r\n    showMemberSelectionModal(matchingMembers, taskCategory, button, taskId); // Visa en modal med medlemmarna\r\n\r\n}","// Funktioner som renderar uppgifterna från getAllTasks(). Uppdaterar status på firebase \r\n// beroende på vilken knapp som klickas.\r\n\r\nimport { getAllTasks } from \"./URL.ts\";\r\nimport { Assignment } from \"./assignment.ts\";\r\nimport { assignTaskToMember } from \"./member.ts\";\r\n\r\nexport let tasks:Assignment[];\r\n\r\n// Renderar alla tasks i respektive container.\r\nexport async function renderAllTasks( tasks?: Assignment[]): Promise<void> {\r\n    try {\r\n        if(!tasks)tasks = await getAllTasks();\r\n\r\n        const todoContainer = document.getElementById('todoContainer') as HTMLDivElement;\r\n        const inProgressContainer = document.getElementById('inProgressContainer') as HTMLDivElement;\r\n        const doneContainer = document.getElementById('doneContainer') as HTMLDivElement;\r\n\r\n        todoContainer.innerHTML = '';\r\n        inProgressContainer.innerHTML = '';\r\n        doneContainer.innerHTML = '';\r\n        if (todoContainer) {\r\n            // Loopa igenom alla tasks och skapa HTML för varje\r\n            tasks.forEach(task => {\r\n\r\n                if (task.status === 'new') {\r\n                    // Skapa en div för varje uppgift\r\n                    const taskElement = document.createElement('div');\r\n                    taskElement.classList.add('assignment');\r\n                    taskElement.setAttribute('data-timestamp', task.timestamp.toString());\r\n\r\n                    const timestamp = task.timestamp;\r\n                    const date = new Date(timestamp);\r\n                    const formattedDate = date.toLocaleString('sv-SE');\r\n\r\n                    taskElement.innerHTML = `\r\n                        <h2>To do</h2>\r\n                        <h3>${task.title}</h3>\r\n                        <p><i>${task.description}</i></p>\r\n                        <h4><b>Qualification: ${task.category}</b></h4>\r\n                        <h5>${formattedDate}</h5>\r\n                        <button id=\"assignToBtn\">Assign to</button>\r\n                    `;\r\n\r\n                    todoContainer.appendChild(taskElement);\r\n\r\n                    const assignToBtn = taskElement.querySelector('#assignToBtn') as HTMLButtonElement | null;\r\n                    if (assignToBtn) {\r\n                        assignToBtn.addEventListener('click', async () => {\r\n                            assignTaskToMember(task.category, task.category, assignToBtn, task.id as string);\r\n\r\n                        });\r\n                    }\r\n                }\r\n                else if (task.status === 'in progress') {\r\n\r\n                    // Skapa en div för varje uppgift\r\n                    const taskElement = document.createElement('div');\r\n                    taskElement.classList.add('assignment');\r\n                    taskElement.setAttribute('data-timestamp', task.timestamp.toString());\r\n\r\n                    const timestamp = task.timestamp;\r\n                    const date = new Date(timestamp);\r\n                    const formattedDate = date.toLocaleString('sv-SE');\r\n\r\n                    taskElement.innerHTML = `\r\n                        <h2>In progress</h2>\r\n                        <h3>${task.title}</h3>\r\n                        <p><i>${task.description}</i></p>\r\n                        <h4><b>Qualification: ${task.category}</b></h4>\r\n                        <h5>${formattedDate}</h5>\r\n                        <p>Assigned to: ${task.assigned}</p>\r\n                        <button id=\"doneBtn\">Done</button>\r\n                    `;\r\n\r\n                    inProgressContainer.appendChild(taskElement);\r\n\r\n                    const doneBtn = taskElement.querySelector('#doneBtn') as HTMLButtonElement | null;\r\n                    if (doneBtn) {\r\n                        doneBtn.addEventListener('click', async () => {\r\n\r\n                            const url = `https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments/${task.id}.json`;\r\n\r\n                            const doneTask = {\r\n                                status: 'done',\r\n                            }\r\n                            const options = {\r\n                                method: \"PATCH\",\r\n                                body: JSON.stringify(doneTask),\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                                }\r\n                            };\r\n                            try {\r\n                                const response = await fetch(url, options);\r\n                                if (response.ok) {\r\n                                    console.log(\"Task status updated to done\");\r\n                                    renderAllTasks();\r\n                                } else {\r\n                                    console.error('Failed to update task status');\r\n                                }\r\n                            } catch (error) {\r\n                                console.error('Error while updating task status:', error);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n                else if (task.status === 'done') {\r\n\r\n                    // Skapa en div för varje uppgift\r\n                    const taskElement = document.createElement('div');\r\n                    taskElement.classList.add('assignment');\r\n                    taskElement.setAttribute('data-timestamp', task.timestamp.toString());\r\n\r\n                    const timestamp = task.timestamp;\r\n                    const date = new Date(timestamp);\r\n                    const formattedDate = date.toLocaleString('sv-SE');\r\n\r\n                    taskElement.innerHTML = `\r\n                        <h2>Done</h2>\r\n                        <h3>${task.title}</h3>\r\n                        <p><i>${task.description}</i></p>\r\n                        <h4><b>Qualification: ${task.category}</b></h4>\r\n                        <h5>${formattedDate}</h5>\r\n                        <p>Assigned to: ${task.assigned}</p>\r\n                        <button id=\"deleteBtn\">Delete</button>\r\n                    `;\r\n\r\n                    doneContainer.appendChild(taskElement);\r\n\r\n                    const deleteBtn = taskElement.querySelector('#deleteBtn') as HTMLButtonElement | null;\r\n                    if (deleteBtn) {\r\n                        deleteBtn.addEventListener('click', async () => {\r\n                            const url = `https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments/${task.id}.json`;\r\n\r\n                            const deletedTask = {\r\n                                status: 'deleted',\r\n                            }\r\n                            const options = {\r\n                                method: \"DELETE\",\r\n                                body: JSON.stringify(deletedTask),\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json; charset=UTF-8\"\r\n                                }\r\n                            };\r\n                            try {\r\n                                const response = await fetch(url, options);\r\n                                if (response.ok) {\r\n                                    console.log(\"Task status updated to deleted\");\r\n                                } else {\r\n                                    console.error('Failed to update task status');\r\n                                }\r\n                            } catch (error) {\r\n                                console.error('Error while updating task status:', error);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    } catch (error) {\r\n        console.error('Error displaying assignments:', error);\r\n    }\r\n}","// Hämtar firebase url'n med all backend information.\r\n\r\nimport { Assignment } from \"./assignment\";\r\n\r\nexport const base_url:string = \"https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/assignments\"\r\n\r\nexport async function getAllTasks(): Promise<Assignment[]> {\r\n   \r\n    const url:string = `${base_url}.json`; // Lägg till \".json\" för att hämta data från Firebase\r\n\r\n    try {\r\n        const res = await fetch(url); // Gör ett GET-anrop till Firebase\r\n        if (!res.ok) {\r\n            throw new Error('Something went wrong fetching data');\r\n        }\r\n\r\n        const taskObj: Object = await res.json(); // Konvertera svaret till JSON\r\n\r\n        // gör om objektet till en array.\r\n        const taskArray = Object.entries(taskObj).map( ([id, obj])=> ({\r\n            id: id,\r\n            ...obj\r\n        }));\r\n        console.log(taskArray);\r\n        return taskArray; // Returnera de hämtade uppgifterna\r\n\r\n    } catch (error) {\r\n        console.error('Error when fetching assignments:', error);\r\n        return []; '// Returnera ett tomt objekt om något går fel'\r\n    }\r\n}","// Allt som har med assignment och göra. Hämta assignments, läggs till assignments, och render assignments.\r\n\r\nconst base_url: string = \"https://fe24-js2-slutprojekt-hampus-default-rtdb.europe-west1.firebasedatabase.app/\";\r\n\r\nexport interface Assignment {\r\n    id?: string,\r\n    title: string,\r\n    description: string,\r\n    category: string,\r\n    status: \"new\" | \"in progress\" | \"done\",\r\n    assigned: string | undefined,\r\n    timestamp: number\r\n}\r\n\r\nexport async function addAssignment(event: Event): Promise<void> {\r\n    event.preventDefault();\r\n\r\n    const title = (document.querySelector('#assignmentName') as HTMLInputElement).value.trim();\r\n    const description = (document.querySelector('#assignmentDescription') as HTMLTextAreaElement).value.trim();\r\n    const category = (document.querySelector('#assignmentRole') as HTMLSelectElement).value;\r\n\r\n    if (!title || !category) {\r\n        alert(\"Please provide both title and role.\");\r\n        return;\r\n    }\r\n\r\n    const newAssignment: Assignment = {\r\n        title: title,\r\n        description: description,\r\n        category: category,\r\n        status: \"new\",\r\n        assigned: undefined,\r\n        timestamp: Date.now(),\r\n    };\r\n\r\n    console.log(\"New Assignment to add:\", newAssignment); // Debugga om rätt data skickas\r\n\r\n    const url = base_url + 'assignments.json';\r\n\r\n    const options = {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newAssignment),\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    };\r\n\r\n    try {\r\n        const res = await fetch(url, options);\r\n        if (!res.ok) throw new Error(\"Something went wrong when adding an assignment.\");\r\n\r\n        const data = await res.json();\r\n        console.log(\"Assignment added:\", data);\r\n\r\n        // Återställ formuläret efter att uppgiften är skapad\r\n        (document.querySelector(\"#assignmentName\") as HTMLInputElement).value = \"\";\r\n        (document.querySelector(\"#assignmentDescription\") as HTMLTextAreaElement).value = \"\";\r\n        (document.querySelector(\"#assignmentRole\") as HTMLSelectElement).selectedIndex = 0;\r\n\r\n    } catch (error) {\r\n        console.error(\"Error:\", error);\r\n        alert(\"Could not add assignment, try again!\");\r\n    }\r\n}\r\n\r\n","\r\n// Funktioner som sorterar inProgressContainer på timestamp och bokstavsordning på titeln.\r\n\r\n// Funktion som sorterar DOM-element baserat på Timestamp\r\nfunction sortByTimestamp(order: 'oldestToNewest' | 'newestToOldest'): void {\r\n    const container = document.querySelector('#inProgressContainer');\r\n    if (!container) return;\r\n    \r\n    // Hämta alla uppgiftselement i containern\r\n    const assignmentElements = Array.from(container.querySelectorAll('.assignment')) as HTMLElement[];\r\n\r\n    // Debugga och logga timestamps\r\n    assignmentElements.forEach((el) => {\r\n        const timestamp = parseInt(el.getAttribute('data-timestamp') || '0');\r\n        console.log(`Element ID: ${el.id}, Timestamp: ${timestamp}`);\r\n    });\r\n\r\n    // Sortera elementen baserat på timestamp\r\n    const sortedElements = assignmentElements.sort((a, b) => {\r\n        const timestampA = parseInt(a.getAttribute('data-timestamp') || '0');\r\n        const timestampB = parseInt(b.getAttribute('data-timestamp') || '0');\r\n\r\n        console.log(`Comparing ${timestampA} with ${timestampB}`);\r\n\r\n        return order === 'newestToOldest' ? timestampB - timestampA : timestampA - timestampB;\r\n    });\r\n\r\n    // Omordna elementen i containern utan att skapa nya\r\n    sortedElements.forEach(el => container.appendChild(el)); // Flytta varje element till rätt plats\r\n}\r\n\r\n// Funktion som sorterar DOM-element baserat på titel (A-Z eller Z-A)\r\nfunction sortByTitle(order: 'titleAsc' | 'titleDesc'): void {\r\n    const container = document.querySelector('#inProgressContainer');\r\n    if (!container) return;\r\n\r\n    // Hämta alla uppgiftselement i containern\r\n    const assignmentElements = Array.from(container.querySelectorAll('.assignment')) as HTMLElement[];\r\n\r\n    // Sortera elementen baserat på titeln\r\n    const sortedElements = assignmentElements.sort((a, b) => {\r\n        const titleA = a.querySelector('h3')?.textContent?.toLowerCase() || '';\r\n        const titleB = b.querySelector('h3')?.textContent?.toLowerCase() || '';\r\n\r\n        if (order === 'titleAsc') {\r\n            return titleA.localeCompare(titleB);\r\n        } else {\r\n            return titleB.localeCompare(titleA);\r\n        }\r\n    });\r\n\r\n    // Omordna elementen i containern utan att skapa nya\r\n    sortedElements.forEach(el => container.appendChild(el)); // Detta flyttar elementet till rätt plats\r\n}\r\n\r\nexport { sortByTimestamp, sortByTitle }","// Filtrerar members och kategori.\r\nimport { Assignment } from \"./assignment\";\r\n\r\n// Filtrera uppgifter baserat på medlem\r\n\r\nexport const filterByMember = (tasks: Assignment[], member: string) => {\r\n    return tasks.filter(task => task.assigned === member);\r\n}\r\n\r\n// Filtrera uppgifter baserat på kategori\r\nexport const filterByCategory = (tasks: Assignment[], category: string) => {\r\n    return tasks.filter(task => task.category === category);\r\n}"],"names":["$ad2bcec7a0192558$var$tasks","$118f373941892fbc$export$d1f442602a91e7cc","res","fetch","ok","Error","taskObj","json","taskArray","Object","entries","map","id","obj","console","log","error","$1a5d3e8665c01fa1$export$70637127e9a65bc1","tasks","todoContainer","document","getElementById","inProgressContainer","doneContainer","innerHTML","forEach","task","status","taskElement","createElement","classList","add","setAttribute","timestamp","toString","formattedDate","date","Date","toLocaleString","title","description","category","appendChild","assignToBtn","querySelector","addEventListener","assigned","doneBtn","url","options","method","body","JSON","stringify","headers","response","deleteBtn","$d956a92e5e7c93a9$export$d199869810608d4e","event","preventDefault","name","value","trim","rolesSelect","selectedRole","alert","role","$d956a92e5e7c93a9$var$base_url","data","memberDiv","textContent","selectedIndex","$d956a92e5e7c93a9$export$f4931e6f9feb30c5","membersData","values","$d956a92e5e7c93a9$export$38e490d5a4814c5","taskCategory","button","taskId","$d956a92e5e7c93a9$export$e19948d0d27f8138","matchingMembers","modal","member","join","buttonRect","getBoundingClientRect","style","position","left","right","window","scrollX","top","scrollY","assignButtons","querySelectorAll","assignButton","index","selectedMember","closest","removeChild","parentElement","closeModalButton","members","filter","m","$06810e6f039f30ec$export$f2fb0f65f74a9158","newAssignment","undefined","now","$06810e6f039f30ec$var$base_url","$e362b93da7c8a1b3$export$862675728dfd44e","order","container","assignmentElements","Array","from","el","parseInt","getAttribute","sortedElements","sort","a","b","timestampA","timestampB","$e362b93da7c8a1b3$export$332a3c402681f82d","titleA","toLowerCase","titleB","localeCompare","$d1cdcf3828e16a44$export$45830ad1d19224ad","$d1cdcf3828e16a44$export$6d1731a321e8bdf4","$ad2bcec7a0192558$var$populateMemberFilter","memberFilter","option","then","t","memberform","assignmentform","selectedValue","target","$ad2bcec7a0192558$var$memberFilter","filteredTasks","$ad2bcec7a0192558$var$categoryFilter"],"version":3,"file":"index.66122280.js.map"}